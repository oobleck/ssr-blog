---
import { formatDate } from "../utils/helpers";
import Layout from "./Layout.astro";
import { unsplashCredit, unsplashUrl } from "../utils/unsplash.utils";
import { Image } from "@unpic/astro";

const { frontmatter } = Astro.props;
const { draft, unsplashId, heroDescription, title, description, tags } = frontmatter;
let {hero} = frontmatter;

// hero = null;

// const hero = unsplashUrl(unsplashId);
const heroCredit = unsplashCredit(unsplashId);

const seo = {
  title: title + " | " + title,
  description: description,
  image: hero,
};
const featuredImageDims = [1024, 768];
---

<Layout seo={seo} {unsplashId} level="secondary">
  <article class:list={[{'draft-post': draft}]}>
    <header class="post-header">
      <h1 class="post-header__title">{frontmatter.title}</h1>
      <div class="post-header__meta">
        <time datetime={frontmatter.date} class="post-header__date">
          {formatDate(frontmatter.date)}
        </time>
        {
          tags?.length && (
            <ul class="tags">
              <li>Tags:</li>
              {tags.map((tag: string, tt: number) => (
                <li>
                  {/* <Icon name="material-symbols-light:label-outline" size={32} /> */}
                  <a href={`/tags/${tag}`} title={`Posts with the tag "${tag}"`}>{tag}</a>{tt < tags.length - 1 ? ',' : ''}
                </li>
              ))}
            </ul>
          )
        }
      </div>
    </header>
    <div class="content">
    {
      hero && (
        <figure class="featured-image card">
          {/* <img src={hero} alt={heroDescription} /> */}
          <Image src={hero} alt={heroDescription} width={featuredImageDims[0]} height={featuredImageDims[1]} />
          {heroCredit && (
            <figcaption>
              <a href={heroCredit} target="_blank" rel="noreferrer">
                <small>Image credit</small>
              </a>
            </figcaption>
          )}
        </figure>
      )
    }
      <slot />
    </div>
  </article>
</Layout>

<style>
  .featured-image {
    grid-column: 1 / -1;
    position: relative;
    margin-top: var(--space-2xs);
    /* clip-path: polygon(0 var(--space-s), 100% 0, 100% 100%, 0 100%); */
    clip-path: var(--angle-clip-path-top);
    text-align: center;
    margin-bottom: var(--space-l);

    @media (min-width: 800px) {
      /* clip-path: polygon(0 var(--space-2xl), 100% 0, 100% 100%, 0 100%); */
    }

    img {
      width: 100%;
      max-width: 1000px;
      margin-inline: auto;
      margin-bottom: 0;
    }
  }

  .post-header__title {
    margin: var(--space-s) auto var(--space-2xs);
    text-align: center;
    /* font-weight: var(--font-weight-4); */
  }

  .post-header__meta {
    text-align: center;
    color: lighten(black, 50%);
    font-family: var(--sans-serif);
    font-weight: 300;
    font-size: var(--step--1);
  }

  .post-header {
    margin-bottom: var(--space-m);
    text-align: center;
  }

  .tags {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    gap: 0.5ch;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    /* font-size: 1rem; */
  }
</style>
