---
const {harmony, title} = Astro.props;
const palette = [
  'brand',
  'brand-subtle',
  'brand-shade',
  'accent-1',
  'accent-1-subtle',
  'accent-1-shade',
  'accent-2',
  'accent-2-subtle',
  'accent-2-shade',
];
const basics = [
  'paper',
  'paper-subtle',
  'paper-shade',
  'ink',
  'ink-subtle',
  'ink-shade',
];

const harmonies = [
  'split-complementary',
  'analogous',
  'triadic',
  'monochromatic',
];

const css = `
    --brand-subtle: oklch(from var(--brand) var(--__l-subtle) var(--__c-subtle) h);
    --accent-1-subtle: oklch(from var(--accent-1) var(--__l-subtle) var(--__c-subtle) h);
    --accent-2-subtle: oklch(from var(--accent-2) var(--__l-subtle) var(--__c-subtle) h);

    --brand-shade: oklch(from var(--brand) calc(l * var(--l-threshold)) c h);
    --accent-1-shade: oklch(from var(--accent-1) calc(l * var(--l-threshold)) c h);
    --accent-2-shade: oklch(from var(--accent-2) calc(l * var(--l-threshold)) c h);

    --accent: var(--accent-1);
    --accent-subtle: var(--accent-1-subtle);
    --accent-shade: var(--accent-1-shade);
`;
const tokenRoots = ['brand', 'accent-1', 'accent-2'];
const tokenVariations = ['subtle', 'shade'];
const isKnownHarmony = harmonies.includes(harmony);
---

<section class={`h-${isKnownHarmony ? harmony : 'site'}`}>
  {harmony && <h3>{harmony.replace('-', ' ')}</h3>}
  <div class="palette-samples over-margin" style={harmony && css}>
    {[...palette, ...basics]
      // This filter hides basics in known harmones, or hides accent-2* in the site's palette
      .filter((token) => isKnownHarmony ? !basics.includes(token) : !token.includes('2'))
      .map((token) => (<div class="palette-chip" style={`--palette-color: var(--${token})`} data-token={token}
        aria-label={`Palette sample of the color assigned to the design token '${token}'`}></div>))}
  </div>
</section>

<style>
  .palette-samples {
    position: relative;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: var(--space-3xs-2xs);

    .palette-chip {
      position: relative;
      aspect-ratio: 1.618;
      padding: 1rem;
      background-color: var(--palette-color, #eee);
      color: var(--contrast-color, white);
      text-shadow: 1px 1px 1px black;
      border-radius: var(--radius-2);
      box-shadow: var(--shadow-3);
      transition: 0.2s ease-in-out;

      &:hover {
        box-shadow: var(--shadow-5);
        z-index: var(--layer-2);
        transform: scale(1.05);
      }

      @supports (color: oklch(from red l c h)) {
        --l: clamp(0, (var(--l-threshold) / l - 1) * infinity, 1);
        --contrast-color: oklch(from var(--palette-color) var(--l) 0 h);
        --contrast-background: oklch(from var(--contrast-color) var(--l) 0 h);
        text-shadow: unset;
      }

      &::before {
        content: "--" attr(data-token);
        position: absolute;
        bottom: 0;
        right: 0;
        left: 0;
        min-width: 75%;
        text-align: right;
        padding: 0.2ch 0.6ch;
        /* margin: 0.2ch; */
        /* border: 1px solid; */
        background: oklch(from var(--contrast-background) l c h / 30%);
        font-size: var(--step--1);
      }
    }
  }
</style>

<style is:global>
  section.h-split-complementary {
    --split: 30;
    --accent-1: oklch(from var(--brand) l c calc(h - 180 - var(--split)));
    --accent-2: oklch(from var(--brand) l c calc(h - 180 + var(--split)));
  }
  section.h-analogous {
    --split: 30;
    --accent-1: oklch(from var(--brand) l c calc(h - var(--split)));
    --accent-2: oklch(from var(--brand) l c calc(h + var(--split)));
  }
  section.h-triadic {
    --split: 120;
    --accent-1: oklch(from var(--brand) l c calc(h - var(--split)));
    --accent-2: oklch(from var(--brand) l c calc(h + var(--split)));
  }
  section.h-monochromatic {
    --accent-1: oklch(from var(--brand) calc(l * 1.3) calc(c * 1.2) h);
    --accent-2: oklch(from var(--accent-1) calc(l * 1.3) calc(c * 1.2) h);
  }
  /* section.h-triadic {
    --split: 90;
    --accent-1: oklch(from var(--brand) l c calc(h - var(--split)));
    --accent-2: oklch(from var(--brand) l c calc(h + var(--split)));
    --accent-3: oklch(from var(--brand) l c calc(h + var(--split)));
  } */
  /* section.h-square {} */
</style>
