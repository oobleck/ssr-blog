---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const _href = (href as string)?.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = pathname.includes(_href) || href === pathname || href === '/' + (subpath?.[0] || '');
const isExternal = /^http/i.test(_href);
const rel = isExternal ? `${props.rel} noopener nofollow` : props.rel;
const target = isExternal ? '_blank' : void 0;
---

<a
  {href}
  class:list={[className, { active: isActive }]}
  {rel}
  {target}
  {...props}><slot /></a
>
