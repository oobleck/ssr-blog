---
// import Card from './Card.astro';
import sanitizeHtml from 'sanitize-html';
import FormattedDate from './FormattedDate.astro';
import Link from './HeaderLink.astro';
import {Icon} from 'astro-icon/components';

const { src, label, inline = true } = Astro.props;
const url = new URL(src);
const {origin: domain, host} = url;
const [noop, username, tootId] = url.pathname.split('/');

const request = await fetch(`${domain}/api/v1/statuses/${tootId}`);
const {card, ...toot} = await request.json();
const fullUsername = `@${card.author_name}@${host}`;
const title = `"${card.title}" by @${card.author_name}`;
const postDate = toot.edited_at ?? toot.created_at;
// console.log({card, toot})
---
{!inline && (
  <div
    class="toot-preview card"
    url={src}
    media={card.image}
  >
    <header slot="header" class="media-object">
      <img src={toot.account.avatar_static} alt={`Avatar image User "${toot.account.display_name}"`} />
      <h6 class="username">
        {toot.account.display_name}
        <small>
          <Link href={toot.account.url} tabindex="0">@{toot.account.username}</>
        </small>
      </h6>
    </header>

    <section class="card__content">
      <blockquote set:html={sanitizeHtml(toot.content)} />

      {card && (
        <div class="card sub-card">
          <Link href={card.url} tabindex="0" class="card__content">
            <small>{card.provider_name}</small>
            <strong set:html={sanitizeHtml(card.title)} />
            <small>by {card.author_name}</small>
          </Link>
        </div>
      )}

      <p><Link href={toot.url} tabindex="0">Join the conversation...</Link></p>
    </section>

    <footer slot="footer">
      <FormattedDate
        date={new Date(toot.created_at)}
        format={{
          month: "short",
          day: "numeric",
          year: "numeric",
          hour: "numeric",
          minute: "numeric",
        }}
      ></FormattedDate>
      {toot.replies_count && ( <div title={`${toot.replies_count} Replies`}>
        <Icon class="replies" name="mdi:reply-outline"></Icon>
        <span set:text={toot.replies_count}></span>
      </div> )}
      {toot.reblogs_count && ( <div title={`${toot.reblogs_count} Boosts`}>
        <Icon class="reblogs" name="mdi:repeat"></Icon>
        <span set:text={toot.reblogs_count}></span>
      </div> )}
      {toot.favourites_count && ( <div title={`${toot.favourites_count} Favorites`}>
        <Icon class="favorites" name="mdi:heart-outline"></Icon>
        <span set:text={toot.favourites_count}></span>
      </div> )}
      <!-- <sl-relative-time date={postDate}></sl-relative-time> -->
    </footer>
  </div>
)}
{inline && <Link href={src} set:html={sanitizeHtml(label ?? title)}></Link>}

<style>
.toot-preview {
  max-width: calc(var(--grid-max-width) * 0.6);
  box-shadow: var(--shadow-2);
  margin-inline: auto;
  border: 1px solid var(--paper-shade);

  .card__media img {
    aspect-ratio: unset !important;
  }
}

.username {
  small {
    display: block;
  }
}

header {
  width: 100%;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  gap: 1em;

  .username {
    margin: 0;
  }
}

footer {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 1ch;

  > * {
    font-size: var(--step--2);
    /* flex: 1; */
  }

  > :first-child {
    margin-inline-end: auto;
  }
}

.card__content {
  p {
    font-size: var(--step--1);
  }

  :first-child {
    margin-block-start: 0;
  }

  :last-child {
    margin-block-end: 0;
  }
}

.sub-card {
  border: 1px solid var(--paper-shade);

  .card__content {
    > * {
      display: block;
    }
  }
}

[data-icon] {
  display: inline-block;

  &.replies {
    color: cadetblue;
  }
  &.reblogs {
    color: green;
  }
  &.favorites {
    color: indianred;
  }
}
</style>
