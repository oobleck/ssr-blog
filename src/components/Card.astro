---
import { Image } from "astro:assets";
import { settings } from "../data/settings";

const { media, mediaDescription = '', url } = Astro.props;
const hasTitle = Astro.slots.has('card_title');
const hasFooter = Astro.slots.has('card_footer');
const shouldLinkFooter = url && !hasTitle;
const isLocalLink = url && ( url.startsWith('/') || url.startsWith(settings.site) );
const linkAttributes = isLocalLink ? {} : { target: "_blank", rel: "noreferrer" };
---

<figure class="card">
  {media && (
    <div class="card__media">
      <a href={url} {...linkAttributes}>
        <img src={media} alt={mediaDescription} />
      </a>
    </div>
  )}
  <figcaption class="card__content">
    {Astro.slots.has('card_title') && (
      <header class="card__header">
        {url && (
          <a href={url} {...linkAttributes}><slot name="card_title" /></a>
        )}
        {!url && (<slot name="card_title" />)}
      </header>
    )}
    <slot />
    {Astro.slots.has('card_footer') || url && (
      <footer class="card__footer">
        <slot name="card_footer" />
        {url && (
          <a href={url} {...linkAttributes}>
            <small>Read more&hellip;</small>
          </a>
        )}
      </footer>
    )}
  </figcaption>
</ficure>

<style>
.card {
  background-color: var(--paper);
  border-radius: var(--radius-2);
  box-shadow: var(--shadow-2);
  overflow: hidden;
  margin: 0 auto;
  transition: all 0.3s var(--ease-3);
  
  &:where(:hover, :focus) {
    box-shadow: 0 0 0 3px var(--accent), var(--shadow-3);
  }

  .card__media {
    img {
      aspect-ratio: 14/9;
      width: 100%;
    }
  }
  .card__content {
    padding: var(--space-xs-s);
    margin: 0;
    position: relative;

    :global(.metadata) {
      margin: 0;
    }
  }
  .card__header {
    :global(:where(h1, g2, g3, h4, h5, h6)) {
      margin-block-start: 0;
    }
  }
  .card__footer {}

  .card__link {
    position: absolute;
    top: 0;
    width: 100;
    height: 100%;
  }
}
</style>
